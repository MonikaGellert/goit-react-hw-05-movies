{"version":3,"file":"static/js/168.b34449a4.chunk.js","mappings":"sKAAO,IAAMA,EAAS,kC,sICCtB,EAA0B,yB,SC8C1B,EA1CgB,WACd,OAA6BC,EAAAA,EAAAA,MAArBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QACjB,GAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,+GAEMC,MAAM,sCAAD,OACYN,EADZ,4BACuCH,EAAAA,IAHlD,WAEXU,EAFW,QAKHC,GALG,sBAMT,IAAIC,MAAM,+BAND,uBAQEF,EAASG,OARX,OAQXC,EARW,OASjBR,EAAkBQ,EAAKC,SACvBC,QAAQC,IAAIH,EAAKC,SAVA,kDAYjBC,QAAQE,MAAM,SAAd,MAZiB,0DAAH,qDAgBlBV,GACD,GAAE,CAACN,EAASC,KAGX,yBACGE,EACCA,EAAec,KAAI,SAAAC,GACjB,OACE,iBAAqBC,UAAWC,EAAhC,WACE,wBAAKF,EAAOG,UACZ,uBAAIH,EAAOI,YAFHJ,EAAOK,GAKpB,KAED,oDAIP,C,sBC7CD,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOjB,GAEP,YADAW,EAAOX,EAET,CAEIgB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["API key/index.js","webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["export const apiKey = 'c6cec78029d9b3a5ee3a2d24ebcb1c0f';\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Reviews_wrapper__93MpV\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { apiKey } from 'API key';\nimport css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { reviews, movieId } = useParams();\n  const [reviewsDetails, setReviewsDetails] = useState([]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}`\n        );\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setReviewsDetails(data.results);\n        console.log(data.results);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n\n    fetchReviews();\n  }, [reviews, movieId]);\n\n  return (\n    <div>\n      {reviewsDetails ? (\n        reviewsDetails.map(review => {\n          return (\n            <div key={review.id} className={css.wrapper}>\n              <h2>{review.author}</h2>\n              <p>{review.content}</p>\n            </div>\n          );\n        })\n      ) : (\n        <p>Loading cast details...</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["apiKey","useParams","reviews","movieId","useState","reviewsDetails","setReviewsDetails","useEffect","fetchReviews","fetch","response","ok","Error","json","data","results","console","log","error","map","review","className","css","author","content","id","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}