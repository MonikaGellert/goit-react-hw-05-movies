{"version":3,"file":"static/js/76.23a6ec9a.chunk.js","mappings":"qKAAO,IAAMA,EAAS,kC,qICCtB,EAA0B,sBAA1B,EAAwD,oBAAxD,EAAuF,uB,SCuDvF,EAnDa,WACX,OAA0BC,EAAAA,EAAAA,MAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QACd,GAAsCC,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAsBA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,+GAESC,MAAM,wCAAD,OACCN,EADD,4BAC4BH,EAAAA,IAH1C,WAERU,EAFQ,QAIAC,GAJA,sBAKN,IAAIC,MAAM,+BALJ,uBAOKF,EAASG,OAPd,OAORC,EAPQ,OAQdR,EAAeQ,EAAKZ,MACpBa,QAAQC,IAAIF,EAAKZ,MATH,kDAWda,QAAQE,MAAM,SAAd,MAXc,0DAAH,qDAefT,GACD,GAAE,CAACN,EAAMC,KAGR,0BACE,eAAIe,UAAWC,EAAf,SACGd,EACCA,EAAYe,KAAI,SAAAC,GAAK,OACnB,gBAAIH,UAAWC,EAAf,UACGE,EAAMC,cACL,gBACEJ,UAAWC,EACXI,IAAI,QACJC,IA/BG,kCA+BeH,EAAMC,gBAG1B,gBAAKC,IAAI,WAEX,wBAAKF,EAAMI,QACX,uBAAIJ,EAAMK,cAXmBL,EAAMM,GADlB,KAgBrB,sDAKT,C,sBCtDD,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOpB,GAEP,YADAc,EAAOd,EAET,CAEImB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["API key/index.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["export const apiKey = 'c6cec78029d9b3a5ee3a2d24ebcb1c0f';\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Cast_wrapper__XmIBi\",\"actor\":\"Cast_actor__tWtXy\",\"actorImg\":\"Cast_actorImg__T6qL2\"};","import { apiKey } from 'API key';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const { cast, movieId } = useParams();\n  const [castDetails, setCastDetails] = useState(null);\n  const MOVIE_LINK = 'https://image.tmdb.org/t/p/w500';\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const response = await fetch(`\nhttps://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setCastDetails(data.cast);\n        console.log(data.cast);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n\n    fetchCast();\n  }, [cast, movieId]);\n\n  return (\n    <div>\n      <ul className={css.wrapper}>\n        {castDetails ? (\n          castDetails.map(actor => (\n            <li className={css.actor} key={actor.id}>\n              {actor.profile_path ? (\n                <img\n                  className={css.actorImg}\n                  alt=\"actor\"\n                  src={MOVIE_LINK + actor.profile_path}\n                />\n              ) : (\n                <img alt=\"actor\" />\n              )}\n              <h3>{actor.name}</h3>\n              <p>{actor.character}</p>\n            </li>\n          ))\n        ) : (\n          <p>Loading cast details...</p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["apiKey","useParams","cast","movieId","useState","castDetails","setCastDetails","useEffect","fetchCast","fetch","response","ok","Error","json","data","console","log","error","className","css","map","actor","profile_path","alt","src","name","character","id","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}